Dry Run:

=> initialise listOfIntegers variable 
    => RHS readLine().split[' ']
    => [ '71', '32', '-53', '71', '71', '-53' ]
=> listOfIntegers = [ '71', '32', '-53', '71', '71', '-53' ];

=> initialize goodPairsCount with 0 
    => RHS 0;
    => goodPairsCount = 2;
L27 => for loop 
    => i =0; 
    => loop condition -> 0<6; 
    => increment -> i++ -> will add 1 at the end of each loop executing
    ==> go to L28
L28 => j = 0+1= 1; 
    ==> loop condition 1< 6
    ==> increment -> j++ -> will add 1 at the end of each loop execution
    ==> go to L29 
L 29 ==> if (listOfIntegers[0] == listOfIntegers[1])
    ==> if ('71' == '32')
    ==> false 
    ==> increment +1 into j 
    ==> go to L 28 
L 28 ==> j = 0+1+1 = 2
    ==> loop condition 2< 6
    ==> got to L29 
L 29 ==> if (listOfIntegers[0] == listOfIntegers[2])
    ==> if ('71' == '-53')
    ==> false 
    ==> increment +1 into j 
    ==> go to L 28 
L 28 ==> j = 0+1+1+1 = 3
    ==> loop condition 3< 6
    ==> got to L29 
L 29 ==> if (listOfIntegers[0] == listOfIntegers[3])
    ==> if ('71' == '71')
    ==> true
    ==> add +1 to goodPairsCount 
    ==> increment +1 into j 
    ==> go to L 28 

L 28 ==> j = 0+1+1+1+1 =4 
    ==> loop condition 4< 6
    ==> got to L29 
L 29 ==> if (listOfIntegers[0] == listOfIntegers[4])
    ==> if ('71' == '71')
    ==> true
    ==> add +1 to goodPairsCount 
    ==> increment +1 into j 
    ==> go to L 28 
L 28 ==> j = 0+1+1+1+1+1 = 5
    ==> loop condition 5< 6
    ==> got to L29 
L 29 ==> if (listOfIntegers[0] == listOfIntegers[5])
    ==> if ('71' == '-53')
    ==> false 
    ==> increment +1 into j
    ==> go to L 27
L 27 ==> increment i+1 
    ==> i = 0+1 = 1; 
    ==> 1 < 6 
    ==> go to L 28 

     
 